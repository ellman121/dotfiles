#############
### zshrc ###
#############

### Added by Zinit's installer
if [[ ! -f $HOME/.zinit/bin/zinit.zsh ]]; then
    print -P "%F{33}▓▒░ %F{220}Installing %F{33}DHARMA%F{220} Initiative Plugin Manager (%F{33}zdharma/zinit%F{220})…%f"
    command mkdir -p "$HOME/.zinit" && command chmod g-rwX "$HOME/.zinit"
    command git clone https://github.com/zdharma/zinit "$HOME/.zinit/bin" && \
        print -P "%F{33}▓▒░ %F{34}Installation successful.%f%b" || \
        print -P "%F{160}▓▒░ The clone has failed.%f%b"
fi

source "$HOME/.zinit/bin/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zinit-zsh/z-a-rust \
    zinit-zsh/z-a-as-monitor \
    zinit-zsh/z-a-patch-dl \
    zinit-zsh/z-a-bin-gem-node \
    atinit"zicompinit; zicdreplay" \
        zdharma/fast-syntax-highlighting \
    atload"_zsh_autosuggest_start" \
        zsh-users/zsh-autosuggestions \
    blockf atpull'zinit creinstall -q .' \
        zsh-users/zsh-completions

### End of Zinit's installer chunk

export PLATFORM="macos"
export WSL=false
if [[ `uname` == Linux ]]; then
    PLATFORM="linux"
    if [[ -d "/mnt/c/Windows" ]]; then
        WSL=true
    fi
fi

##############################
### Environment Management ###
##############################

if type brew &>/dev/null && [[ $PLATFORM == "macos" ]]; then
	FPATH=$(brew --prefix)/share/zsh/site-functions:/usr/local/Cellar/zsh/5.8_1/share/zsh/functions
	autoload -Uz compinit
	compinit
fi

#################
### Behaviour ###
#################

# Prompt Setup
zinit light denysdovhan/spaceship-prompt

SPACESHIP_PROMPT_ORDER=(
  dir       # Current directory section
  git       # Git section (git_branch + git_status)
  line_sep  # Line break
  user      # Username section
  host      # Hostname section
  exec_time # Execution time
  exit_code # Exit code section
  char      # Prompt character
)
SPACESHIP_PROMPT_PREFIXES_SHOW=false
SPACESHIP_DIR_TRUNC_REPO=false
SPACESHIP_USER_SHOW="always"
SPACESHIP_USER_COLOR="cyan"
SPACESHIP_USER_SUFFIX=" @"
SPACESHIP_HOST_SHOW="always"
SPACESHIP_HOST_COLOR="grey"
SPACESHIP_HOST_COLOR_SSH="red"

# History control
HISTCONTROL=ignoredups:ignorespace
HISTSIZE=5000
HISTFILESIZE=1000

# ls Colors
export CLICOLOR=1
export LS_COLORS='di=34:ln=35;40:so=32:pi=33:ex=31:bd=34;46:cd=34;43:su=30;41:sg=30;46:tw=30;42:ow=30;43'
if command -v vivid 1>/dev/null 2>&1; then
    if [[ $hello =~ 'truecolor|24bit' ]]; then
        export LS_COLORS="$(vivid generate molokai)"
    else
        export LS_COLORS="$(vivid -m 8-bit generate molokai)"
    fi
fi

###########################
### Pull in other files ###
###########################

# Private environment stuff
if [[ -f ~/.bash_private ]]; then
    source ~/.bash_private
fi

# Get dem aliases
if [[ -f ~/.aliases ]]; then
	source ~/.aliases
fi

# Platform specific aliases
if [[ $PLATFORM == "macos" ]]; then
    alias finder="open"
    alias o.="open ."
    alias l="gls --color"
    alias ls="gls --color"
    alias la="gls --color -a"
    alias ll="gls --color -al"
elif [[ $WSL ]]; then
    alias explorer="/mnt/c/Windows/explorer.exe"
    alias o.="/mnt/c/Windows/explorer.exe ."
    alias l="ls --color"
    alias ls="ls --color"
    alias la="ls --color -a"
    alias ll="ls --color -al"
fi

##################################
### Init some shell extensions ###
##################################

# direnv
if command -v direnv 1>/dev/null 2>&1; then
    eval "$(direnv hook zsh)"
fi

# rbenv
if command -v rbenv 1>/dev/null 2>&1; then
	eval "$(rbenv init -)"
fi

# pyenv
if command -v pyenv 1>/dev/null 2>&1; then
    PYENV_ROOT="$HOME/.pyenv"
	eval "$(pyenv init -)"

    # Make pyenv play nicely with linuxbrew
    if [[ $PLATFORM == "linux" ]]; then
        alias brew='env PATH=${PATH//$(pyenv root)\/shims:/} brew'
    fi
fi

# Set up thefuck
if command -v thefuck 1>/dev/null 2>&1; then
	eval "$(thefuck --alias)"
fi
