#######################
### zsh setup stuff ###
#######################

### Added by Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})â€¦%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zdharma-continuum/zinit-annex-as-monitor \
    zdharma-continuum/zinit-annex-bin-gem-node \
    zdharma-continuum/zinit-annex-patch-dl \
    zdharma-continuum/zinit-annex-rust

### End of Zinit's installer chunk

##############################
### Environment Management ###
##############################

# NOTES: I'm aware of the nuances between zshrc, zshenv, zprofile, etc.,
# but MacOS forces you to do things in the rc file because it does its
# own annoying path reordering after zshenv is sourced
#
# Furhter Reading: https://gist.github.com/Its-Yash/5ce45685e643b21dc9fe8dc9615826cf

# Misc
export LANG=en_US.UTF-8

# Goland Environment
export GOPATH=$HOME/go
export GOBIN=$HOME/go/bin

EDITOR="emacs"
PLATFORM="macos"
WSL=false

if [[ `uname` == Linux ]]; then
    PLATFORM="linux"
    if [[ -d "/mnt/c/Windows" ]]; then
        WSL=true
    fi
fi

if [[ $PLATFORM == "macos" ]]; then
	# Set Homebrew Cask environment variables
	export HOMEBREW_CASK_OPTS="--appdir=/Applications"
	export HOMEBREW_NO_AUTO_UPDATE=1

    # Add brew binaries to the path
    BREW_BIN="/opt/homebrew/bin"   # Homebrew bin
    BREW_SBIN="/opt/homebrew/sbin" # Homebrew sbin
    BREW_OPTS="/opt/homebrew/opt"  # Homebrew opts (has curl / etc.)
	export PATH=$BREW_BIN:$BREW_SBIN:$BREW_OPTS:$PATH:
elif [[ $PLATFORM == "linux" ]]; then
    # Build $PATH for linux.  Mac OS runs `path_helper` so this isn't
    # necessary up there
    #
    # Below is the base path things in the order I like
    #   - System bin     /bin
    #   - System sbin    /sbin
    #   - General bin    /usr/bin
    #   - General sbin   /usr/sbin
    #   - User bin      ~/bin
    BASE_PATH=/bin:/sbin:/usr/bin:/usr/sbin:$HOME/bin
    export PATH=$BASE_PATH

    if [[ $WSL ]]; then
        if [ ! -h $HOME"/.msbin/code" ]; then
            ln -s -f "/mnt/c/Program\ Files/Microsoft\ VS\ Code/bin/code" $HOME"/.msbin/code"
        fi
        export PATH=$BASE_PATH:~/.msbin
    fi

    eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)
fi

#################
### Behaviour ###
#################

# Prompt Setup
zinit light denysdovhan/spaceship-prompt

# Left side
SPACESHIP_PROMPT_ORDER=(
  dir       # Current directory section
  git       # Git section (git_branch + git_status)
  line_sep  # Line break
  user      # Username section
  host      # Hostname section
  exec_time # Execution time
  exit_code # Exit code section
  char      # Prompt character
)

# Right side
SPACESHIP_RPROMPT_ORDER=(
    time
)

SPACESHIP_PROMPT_PREFIXES_SHOW=false
SPACESHIP_DIR_TRUNC_REPO=false
SPACESHIP_USER_SHOW="always"
SPACESHIP_USER_COLOR="cyan"
SPACESHIP_USER_SUFFIX=" @"
SPACESHIP_HOST_SHOW="always"
SPACESHIP_HOST_COLOR="grey"
SPACESHIP_HOST_COLOR_SSH="red"
SPACESHIP_TIME_COLOR=white
SPACESHIP_TIME_SHOW=true

# History control
HISTCONTROL=ignoredups:ignorespace
HISTSIZE=5000
HISTFILESIZE=1000

# ls Colors
export CLICOLOR=1
export LS_COLORS='di=34:ln=35;40:so=32:pi=33:ex=31:bd=34;46:cd=34;43:su=30;41:sg=30;46:tw=30;42:ow=30;43'
if command -v vivid 1>/dev/null 2>&1; then
    if [[ $hello =~ 'truecolor|24bit' ]]; then
        export LS_COLORS="$(vivid generate molokai)"
    else
        export LS_COLORS="$(vivid -m 8-bit generate molokai)"
    fi
fi

###########################
### Pull in other files ###
###########################

# Private environment stuff
if [[ -f ~/.bash_private ]]; then
    source ~/.bash_private
fi

# Get dem aliases
if [[ -f ~/.aliases ]]; then
	source ~/.aliases
fi

# Platform specific aliases
if [[ $PLATFORM == "macos" ]]; then
    alias finder="open"
    alias o.="open ."
elif [[ $WSL ]]; then
    alias explorer="/mnt/c/Windows/explorer.exe"
    alias o.="/mnt/c/Windows/explorer.exe ."
fi

#############################
### Init shell extensions ###
#############################

# direnv
if command -v direnv 1>/dev/null 2>&1; then
    eval "$(direnv hook zsh)"
fi

# NVM
if [ -d "$HOME/.nvm" ]; then
    export NVM_DIR="$HOME/.nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
    [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
fi

# rbenv
if command -v rbenv 1>/dev/null 2>&1; then
	eval "$(rbenv init -)"
fi

# pyenv
if command -v pyenv 1>/dev/null 2>&1; then
    export PYENV_ROOT="$HOME/.pyenv"
    export PATH="$PYENV_ROOT/bin:$PATH"
	eval "$(pyenv init -)"
fi

# Set up thefuck
if command -v thefuck 1>/dev/null 2>&1; then
	eval "$(thefuck --alias)"
fi

# remove duplicat entries from $PATH
# zsh uses $path array along with $PATH 
typeset -U PATH path
