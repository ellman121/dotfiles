#############
### zshrc ###
#############

#################
### Behaviour ###
#################

# Prompt Setup
zinit light denysdovhan/spaceship-prompt

SPACESHIP_PROMPT_ORDER=(
  dir       # Current directory section
  git       # Git section (git_branch + git_status)
  line_sep  # Line break
  user      # Username section
  host      # Hostname section
  exec_time # Execution time
  exit_code # Exit code section
  char      # Prompt character
)
SPACESHIP_PROMPT_PREFIXES_SHOW=false
SPACESHIP_DIR_TRUNC_REPO=false
SPACESHIP_USER_SHOW="always"
SPACESHIP_USER_COLOR="cyan"
SPACESHIP_USER_SUFFIX=" @"
SPACESHIP_HOST_SHOW="always"
SPACESHIP_HOST_COLOR="grey"
SPACESHIP_HOST_COLOR_SSH="red"

# History control
HISTCONTROL=ignoredups:ignorespace
HISTSIZE=5000
HISTFILESIZE=1000

# ls Colors
export CLICOLOR=1
export LS_COLORS='di=34:ln=35;40:so=32:pi=33:ex=31:bd=34;46:cd=34;43:su=30;41:sg=30;46:tw=30;42:ow=30;43'
if command -v vivid 1>/dev/null 2>&1; then
    if [[ $hello =~ 'truecolor|24bit' ]]; then
        export LS_COLORS="$(vivid generate molokai)"
    else
        export LS_COLORS="$(vivid -m 8-bit generate molokai)"
    fi
fi

###########################
### Pull in other files ###
###########################

# Private environment stuff
if [[ -f ~/.bash_private ]]; then
    source ~/.bash_private
fi

# Get dem aliases
if [[ -f ~/.aliases ]]; then
	source ~/.aliases
fi

# Platform specific aliases
if [[ $PLATFORM == "macos" ]]; then
    alias finder="open"
    alias o.="open ."
    alias l="gls --color"
    alias ls="gls --color"
    alias la="gls --color -a"
    alias ll="gls --color -al"
elif [[ $WSL ]]; then
    alias explorer="/mnt/c/Windows/explorer.exe"
    alias o.="/mnt/c/Windows/explorer.exe ."
    alias l="ls --color"
    alias ls="ls --color"
    alias la="ls --color -a"
    alias ll="ls --color -al"
fi

#############################
### Init shell extensions ###
#############################

# direnv
if command -v direnv 1>/dev/null 2>&1; then
    eval "$(direnv hook zsh)"
fi

# NVM
if [ -d "$HOME/.nvm" ]; then
    export NVM_DIR="$HOME/.nvm"
    [ -s "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh"  # This loads nvm
    [ -s "/usr/local/opt/nvm/etc/bash_completion.d/nvm" ] && . "/usr/local/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion
fi

# rbenv
if command -v rbenv 1>/dev/null 2>&1; then
	eval "$(rbenv init -)"
fi

# pyenv
if command -v pyenv 1>/dev/null 2>&1; then
    export PYENV_ROOT="$HOME/.pyenv"
    export PATH="$PYENV_ROOT/bin:$PATH"
	eval "$(pyenv init -)"

    # Make pyenv play nicely with linuxbrew
    if [[ $PLATFORM == "linux" ]]; then
        alias brew='env PATH=${PATH//$(pyenv root)\/shims:/} brew'
    fi
fi

# Set up thefuck
if command -v thefuck 1>/dev/null 2>&1; then
	eval "$(thefuck --alias)"
fi

### Added by Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})â€¦%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit
### End of Zinit's installer chunk

